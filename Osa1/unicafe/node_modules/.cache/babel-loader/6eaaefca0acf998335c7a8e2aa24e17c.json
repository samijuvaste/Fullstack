{"ast":null,"code":"var _jsxFileName = \"/home/sami/School/Fullstack/Fullstack/Osa1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = _ref => {\n  let {\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 28\n  }, this);\n};\n\n_c = Header;\n\nconst Button = _ref2 => {\n  let {\n    handleClick,\n    text\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good - bad) / (good + neutral + bad)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const total = good + neutral + bad;\n  const average = total ? (good - bad) / total : 0;\n  const positive = 100 * good / total;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: 'give feedback'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: 'statistics'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stat, {\n      text: 'good',\n      number: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stat, {\n      text: 'neutral',\n      number: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stat, {\n      text: 'bad',\n      number: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stat, {\n      text: 'all',\n      number: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stat, {\n      text: 'average',\n      number: average\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", positive, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","Header","text","Button","handleClick","Statistics","good","neutral","bad","App","setGood","setNeutral","setBad","total","average","positive"],"sources":["/home/sami/School/Fullstack/Fullstack/Osa1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Header = ({text}) => <h2>{text}</h2>\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistics = ({good, neutral, bad}) => (\n  <>\n    <p>all {good + neutral + bad}</p>\n    <p>average {(good - bad) / (good + neutral + bad)}</p>\n\n  </>\n)\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const total = good + neutral + bad\n  const average = total ? (good - bad) / total : 0\n  const positive = 100 * good / total\n\n  return (\n    <div>\n      <Header text={'give feedback'}/>\n      <Button handleClick={() => setGood(good + 1)} text=\"good\"/>\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\"/>\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\"/>\n      <Header text={'statistics'}/>\n      <Stat text={'good'} number={good}/>\n      <Stat text={'neutral'} number={neutral}/>\n      <Stat text={'bad'} number={bad}/>\n      <Stat text={'all'} number={total}/>\n      <Stat text={'average'} number={average}/>\n      <p>positive {positive} %</p>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}